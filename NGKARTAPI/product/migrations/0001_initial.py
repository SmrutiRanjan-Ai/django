# Generated by Django 3.2.8 on 2021-10-17 20:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('CategorySlug', models.SlugField(primary_key=True, serialize=False)),
                ('CategoryDescription', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('CategoryFeaturedImageFile', models.ImageField(blank=True, default=None, null=True, upload_to='static/category/')),
                ('CategoryParent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('TagSlug', models.SlugField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('TaxId', models.AutoField(primary_key=True, serialize=False)),
                ('TaxName', models.CharField(max_length=50)),
                ('TaxRate', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
            options={
                'verbose_name_plural': 'Taxes',
                'unique_together': {('TaxName', 'TaxRate')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('ProductId', models.AutoField(primary_key=True, serialize=False)),
                ('ProductName', models.CharField(blank=True, max_length=100)),
                ('ProductSlug', models.SlugField(blank=True, unique=True)),
                ('ProductDescription', models.TextField(blank=True, null=True)),
                ('ProductFeaturedImageFile', models.ImageField(blank=True, default=None, null=True, upload_to='static/product/')),
                ('ProductIsCustomizable', models.BooleanField(blank=True, default=False)),
                ('ProductPrice', models.DecimalField(blank=True, decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('ProductLaunchDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('ProductInventory', models.PositiveIntegerField(blank=True, default=0)),
                ('ProductInventoryUnit', models.CharField(choices=[('KG', 'KG'), ('CM', 'CM'), ('PC', 'PIECES')], default='KG', max_length=20)),
                ('ProductFeaturedPrice', models.PositiveIntegerField(blank=True, default=0)),
                ('ProductDiscountPercentage', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ProductShippingRate', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ProductFlatShipping', models.BooleanField(blank=True, default=False)),
                ('ProductCategories', models.ManyToManyField(blank=True, related_name='products', to='product.Category')),
                ('ProductCreater', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('ProductTags', models.ManyToManyField(blank=True, related_name='products', to='product.Tag')),
                ('ProductTaxCode', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.tax')),
            ],
            options={
                'ordering': ['-ProductLaunchDate'],
            },
        ),
    ]
